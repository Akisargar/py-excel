version: 1.3.0
services:
  - composer:
      version: 2
  - mysql
  - php:
      version: 8.1
variables:
  global:
    COMPOSER_BIN: $SOURCE_DIR/vendor/bin
events:
  build:
    steps:
        - setup-env:
            type: script
            script:
              - composer validate --no-check-all --ansi
              - composer install --ansi
  #             - nvm install v14 --latest-npm
  #             - npm install --global yarn
  #       - front-end:
  #           type: scriptgit status
  #           script:
  #             - echo 'STARTED Building front end dist dir'
  #             - cd ${SOURCE_DIR}/docroot/themes/custom/millboard
  #             - nvm install v14 --latest-npm
  #             - npm install --global yarn
  #             - npm install
  #             - npm run build
  #             - cd -
  # post-deploy:
  #   steps:
  #     - deploy:
  #         script:
  #           - pipelines-deploy
  #           # Uncomment this line and replace DB_NAME to sync a db on deploys.
  #           # @see https://docs.acquia.com/acquia-cloud/develop/pipelines/databases/
  #           # - pipelines-sync-dbs DB_NAME
  # pr-merged:
  #   steps:
  #     - deploy:
  #         script:
  #           - pipelines-deploy
  # pr-closed:
  #   steps:
  #     - deploy:
  #         script:
  #           - pipelines-deploy
              # - nvm install v6.9.1 --latest-npm
              # - npm install --global yarn
              # - nvm install 16
              # - nvm use 16
              # - source ${BLT_DIR}/scripts/pipelines/setup_env
        # - validate:
        #     type: script
        #     script:
        #       - source ${BLT_DIR}/scripts/pipelines/validate
        # Uncomment these lines to test database updates using live content.
        # You will need to set up SSH keys for your Pipelines container:
        # @see https://docs.acquia.com/acquia-cloud/develop/pipelines/encrypt/
        # - test-updates:
        #     type: script
        #     script:
        #       - blt drupal:sync:default:site
        # - setup-app:
        #     type: script
        #     script:
        #       - source ${BLT_DIR}/scripts/pipelines/setup_app
        # - tests:
        #     type: script
        #     script:
        #       - source ${BLT_DIR}/scripts/pipelines/tests
        # - build-artifact:
        #     type: script
        #     script:
        #       - source ${BLT_DIR}/scripts/pipelines/build_artifact
